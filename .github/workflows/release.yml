name: Build and Upload .NET Artifacts

on:
  release:
    types: [created]
  workflow_dispatch:  # This allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.x'

      # Step 3: Restore dependencies
      - name: Restore dependencies
        run: dotnet restore

      # Step 4: Publish for linux-arm64
      - name: Publish for linux-arm64
        run: |
          dotnet publish -c Release --self-contained -r linux-arm64 --output ./publish/linux-arm64

      # # Step 5: Publish for linux-arm
      # - name: Publish for linux-arm
      #   run: |
      #     dotnet publish -c Release --self-contained -r linux-arm --output ./publish/linux-arm

      # Step 5.5: Create release ID
      - name: Get the Release ID
        id: release
        run: |
          echo "RELEASE_ID=$(jq --raw-output .id < $GITHUB_EVENT_PATH)" >> $GITHUB_ENV

      - name: Debug Release Information
        run: |
          cat $GITHUB_EVENT_PATH  # Output event info for debugging

      # Step 6: Create ZIP files for the published artifacts
      - name: Create ZIP for linux-arm64
        run: |
          cd ./publish
          zip -r linux-arm64.zip linux-arm64

      - name: Get the Release ID
        id: release
        run: |
          release_id=$(jq --raw-output .release.id < $GITHUB_EVENT_PATH)
          echo "Release ID: $release_id"
          echo "upload_url=https://uploads.github.com/repos/${GITHUB_REPOSITORY}/releases/$release_id/assets{?name,label}" >> $GITHUB_ENV

      # - name: Create ZIP for linux-arm
      #   run: |
      #     cd ./publish
      #     zip -r linux-arm.zip linux-arm

      # Step 7: Upload the artifacts to the release
      - name: Upload linux-arm64 artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./publish/linux-arm64.zip
          asset_name: linux-arm64.zip
          asset_content_type: application/zip

      # - name: Upload linux-arm artifact
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./publish/linux-arm.zip
      #     asset_name: linux-arm.zip
      #     asset_content_type: application/zip
